plugins {
  id "com.palantir.docker" version "0.29.0"
  id 'com.palantir.docker-compose' version "0.28.0"
}

ext {

  interlokParentGradle = project.findProperty('interlokParentGradle') ?: 'https://raw.githubusercontent.com/adaptris/interlok-build-parent/main/v4/build.gradle'
  dockerImageName = project.findProperty('dockerImageName') ?: "adaptrislabs/interlok-activemq-solace-xa"
  dockerImageTag = project.findProperty('dockerImageVersion') ?: "latest"
  buildEnv=project.findProperty("buildEnv") ?: "docker"
  includeWar='true'
  // license-{buildEnv}.properties needs to be copied.
  additionalTemplatedProperties = [
    'license'
  ]
  // Ensure variable substitutions work for 'check'
  interlokVerifyEnvironmentProperties = [
    SOLACE_HOST: "localhost",
    SOLACE_PORT: "55555",
    SOLACE_USER: "admin",
    SOLACE_PASSWORD: "admin",
    ACTIVEMQ_HOST: "localhost",
    ACTIVEMQ_PORT: "61616"
  ]
  solaceVersion='10.12.0'
}


allprojects {
  apply from: "${interlokParentGradle}"
}

dependencies {

  interlokRuntime ("com.adaptris:interlok-solace:$interlokVersion") { changing= true}
  interlokRuntime ("com.adaptris:interlok-xa-jms:$interlokVersion") { changing=true }
  interlokRuntime ("com.adaptris:interlok-xa-solace:$interlokVersion") { changing=true }
  interlokRuntime ("com.adaptris:interlok-xa-activemq:$interlokVersion") { changing=true }
  interlokRuntime ("com.adaptris:interlok-xa-atomikos:$interlokVersion") { changing=true }

  interlokRuntime ("com.solacesystems:sol-jms:$solaceVersion")
  interlokRuntime ("com.solacesystems:sol-common:$solaceVersion")
  interlokRuntime ("com.solacesystems:sol-jcsmp:$solaceVersion")

  interlokRuntime ("org.fusesource.jansi:jansi:2.3.4")

  interlokJavadocs group: "com.adaptris", name: "interlok-solace", version: "$interlokVersion", changing: true, classifier: "javadoc", transitive: false
  interlokJavadocs group: "com.adaptris", name: "interlok-xa-jms", version: "$interlokVersion", changing: true, classifier: "javadoc", transitive: false
  interlokJavadocs group: "com.adaptris", name: "interlok-xa-solace", version: "$interlokVersion", changing: true, classifier: "javadoc", transitive: false
  interlokJavadocs group: "com.adaptris", name: "interlok-xa-activemq", version: "$interlokVersion", changing: true, classifier: "javadoc", transitive: false
  interlokJavadocs group: "com.adaptris", name: "interlok-xa-atomikos", version: "$interlokVersion", changing: true, classifier: "javadoc", transitive: false

}

docker {
  name dockerImageName
  tags dockerImageTag
  files tasks.installDist.outputs
  pull true
  noCache true
}

dockerCompose {
  dockerComposeFile "docker-compose.yml"
}

docker.dependsOn check, assemble
